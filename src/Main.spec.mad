#iftarget js
import type { AssertionError } from "Test"
import type { Wish } from "Wish"

import { exists } from "File"
import { always } from "Function"
import IO from "IO"
import { andDo } from "Monad"
import Process from "Process"
import { AssertionError, test } from "Test"
import { mapRej } from "Wish"



assertFileExists :: String -> Wish AssertionError {}
assertFileExists = (filePath) => pipe(
  exists,
  mapRej((_) => AssertionError("OK", `${filePath} not found`)),
  map(always({})),
)(filePath)

test(
  "MadDoc cli should work",
  () => pipe(
    mapRej(
      (raw) => do {
        IO.pTrace("...", raw.stderr)
        return AssertionError("OK", "maddoc exited with non 0 code")
      },
    ),
    andDo(assertFileExists("./madlib_modules/MadDoc/src/documentation.json")),
    andDo(assertFileExists(".docs/bundle.js")),
    andDo(assertFileExists(".docs/index.html")),
    andDo(assertFileExists(".docs/styles/main.css")),
  )(Process.exec("madlib", ["run", "./src/Main.mad", "src"], Process.DEFAULT_COMMAND_OPTIONS)),
)

#endif
